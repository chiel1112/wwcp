//This is a documentation file for copy pasting into a file with an open load freight carriage


import ebf.tim.TrainsInMotion.transportTypes;
import ebf.tim.api.RollingstockBase;
import ebf.tim.api.SkinRegistry;
import ebf.tim.items.ItemTransport;
import ebf.tim.utility.RailUtility;
import ebf.timsquared.TiMSquared;
import ebf.timsquared.models.bogies.CMDBogie;
import ebf.timsquared.models.rollingstock.VATLogCar;
import fexcraft.tmt.slim.ModelBase;
import java.util.List;
import java.util.UUID;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.world.World;


// XXXX
// YYYY
// ZZZZ
// QQQQ

public class EntityYYYY extends WWCPItemTransport {
    public static final Item thisItem;

    public EntityYYYY(UUID owner, World world, double xPos, double yPos, double zPos) {
        super(owner, world, xPos, yPos, zPos);
    }

    public static final Item thisItem = new ItemTransport(new EntityYYYY(null), worldwidecontentpack.MODID , worldwidecontentpack.ZZZZ);

    public EntityYYYY(World world) {
        super(world);
    }
    @Override
    public String transportName() {
        return SuperStat.XXXX().name;
    }

    @Override
    public String transportcountry() {
        return SuperStat.XXXX().country;
    }

    @Override
    public String transportYear() {
        return SuperStat.XXXX().year;
    }

    @Override
    public float weightKg() {
        return SuperStat.XXXX().weight;
    }

    @Override
    public boolean isFictional() {
        return SuperStat.XXXX().fictional;
    }

    @Override
    public String[] additionalItemText() {
        {return new String[]{RailUtility.translate(SuperStat.XXXX().additionalTextTitle) + SuperStat.XXXX().additionalText,
                RailUtility.translate(SuperStat.XXXX().additionalTextTitle2) + SuperStat.XXXX().additionalText2};}
    }

    @Override
    public int getInventoryRows() {
        return 3;
    }

    @Override
    public float[][] bogieModelOffsets() {
        return new float[][]{{1.3F, 0.0F, 0.0F}, {-1.3F, 0.0F, 0.0F}};
    }

    @Override
    public ModelBase[] bogieModels() {
        return new ModelBase[]{new QQQQ()};
    }

    @Override
    public float[] bogieLengthFromCenter() {
        return new float[]{1.0F, -1.0F};
    }

    public float getRenderScale() {
        return 0.0625F;
    }

    @Override
    public float[][] modelOffsets() {
        return new float[][]{{-0.025f,-0.17F,0.F}};
    }

    @Override
    public void registerSkins() {
        SkinRegistry.addSkin(this.getClass(), worldwidecontentpack.MODID, "textures/rollingstock/", "textures/bogies/",
                "NAME", "Description");
    }

    public boolean isReinforced() {
        return SuperStat.XXXX().reinforced;
    }

    public ItemStack[] getRecipie() {
        return new ItemStack[]{RailUtility.DefineStack(Blocks.field_150364_r, 1), null, null, null, null, null, null, null, null};
    }

    public List<transportTypes> getTypes() {
        return transportTypes.QQQQ.singleton();
    }

    public float[][] getRiderOffsets() {
        return (float[][])null;
    }

    public float[] getHitboxSize() {
        return new float[]{4.0F, 1.5F, 1.2F};
    }

    public float getPistonOffset() {
        return 0.0F;
    }

    public ModelBase[] getModel() {
        return new ModelBase[]{new QQQQ()};
    }

    public Item getItem() {
        return thisItem;
    }
}
